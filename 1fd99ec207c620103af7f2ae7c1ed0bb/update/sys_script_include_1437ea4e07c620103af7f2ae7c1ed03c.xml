<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_500374_dell_warr.Contract_Utils</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description>Scipt include to manage contract retrievals.</description>
        <name>Contract_Utils</name>
        <script><![CDATA[var Contract_Utils = Class.create();
Contract_Utils.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {

    // MAIN LOGIC - Get a hardware assets serial number, get its warranty contract and attach it to the asset
    get_contract: function(asset_serial_num) {

        ////////////////////////////////////////// Variables ////////////////////////////////////////////

        // Script include references
        var app_utils = new App_Utils;
        var api_utils = new API_Utils;
        var contract_processing_utils = new Contract_Processing_Utils;

        // Table references
        var asset_gr = new GlideRecord('alm_hardware');

        // Asset data
        var serial_num = (asset_serial_num || this.getParameter('sysparm_serial_number')); // The value populated depends on where get_contract was called from
        var asset_sys_id;

        // API Data
        var api_credentials;

        // Retrieved Contract Data
        var raw_json;
        var scrubbed_json;
        var created_contract;

        // Contract retrieval count
        var success = false;
        var error = true;

        //////////////////////////////////////////// Value Checking/Setting //////////////////////////////////////////

        app_utils.function_log('Contract_Utils', 'get_contract'); // See App_Utils

        if (serial_num == '') { // Check that the asset doesnt have a blank serial number
            app_utils.create_log('Hardware asset does not have a Serial number, please add a Serial number and then try the "Get Contract" action again.', 'Error');
            gs.addErrorMessage('Harware asset does not have a Serial number, please add a Serial number and then try the "Get Contract" action again.');
            return;
        }

        asset_gr.addEncodedQuery('serial_number=' + serial_num);
        asset_gr.query();
        if (asset_gr.next()) {
            asset_sys_id = asset_gr.sys_id; // Get and store assets sys_id
            if (asset_gr.model.manufacturer.name.indexOf('Dell') < 0) {
                app_utils.create_log('Dell is not set as the manufacturer of this hardware asset, please add Dell as the Manufacturer and then try the "Get Contract" action again', 'Error');
                gs.addErrorMessage('Dell is not set as the manufacturer of this hardware asset, please add Dell as the Manufacturer and then try the "Get Contract" action again');
                return;
            }
        }

        api_credentials = app_utils.get_api_key(); // Check if there are api credentials stored
        if (!api_credentials) { // If api credentials were not retrieved
			gs.addErrorMessage('It looks like you have not yet added your Dell API Credentials. Please head over to ' + gs.getProperty('x_500374_dell_warr.settings_page_url') +' to input your Key.');
            app_utils.create_log('It looks like you have not yet added your Dell API Credentials. Please head over to Dell Warranty Import Settings to input your Credentials.', 'Error');
            return;
        }

        ////////////////////////////////////////// Main Life Cycle //////////////////////////////////////////

        raw_json = new API_Utils().get_contract_json(serial_num); // Get asset's contract and store in raw_json variable
		
		
        if (raw_json.status_code == 200) { // Successfully retrieved JSON
            scrubbed_json = contract_processing_utils.scrub_contract_json(raw_json.contract_json); 
            created_contract = contract_processing_utils.create_contract(scrubbed_json, asset_sys_id);
            contract_processing_utils.assign_contract_to_asset(created_contract, asset_sys_id);
			
			app_utils.create_log('Contract for asset with serial number: ' + serial_num + ' from Dell has completed processing');


            success = true;
            error = false;
        } else {
            app_utils.create_log('Could not retrieve contract(s) for asset with serial number: ' + serial_num + ' from Dell', 'Error');
            gs.addErrorMessage('Could not retrieve contract(s) for asset with serial number: ' + serial_num + ' from Dell');
        }

        return JSON.stringify({
            success: success,
            error: error
        }); // Send success and error back to client for processing

    },

    //Get ALL VALID hardware assets serial numbers, get their warranty contract and attach it to the asset
    get_all_contracts: function() {

        // Script includes
        var app_utils = new App_Utils;
        var api_utils = new API_Utils;
        var contract_processing_utils = new Contract_Processing_Utils;

        // Table references
        var asset_gr = new GlideRecord('alm_hardware');

        // Asset data
        var serial_num;
        var asset_sys_id;

        //API data
        var api_credentials;

        // Various contract states
        var raw_json;
        var scrubbed_json;
        var created_contract;

        // Contract retrieval count
        var successes = 0;
        var errors = 0;

        // Encoded Queries
        var encoded_asset_query;

        //////////////////////////////////////////// Value Checking/Setting //////////////////////////////////////////

        encoded_asset_query = 'serial_numberISNOTEMPTY^model_category.name=Computer^model.manufacturer.nameLIKEdell';

        asset_gr.addEncodedQuery(encoded_asset_query);
        asset_gr.query(); // Query for valid hardware assets 

        api_credentials = app_utils.get_api_key(); // Check if there are api credentials stored
        if (!api_credentials) { // If api credentials were not retrieved
            gs.addErrorMessage('It looks like you have not yet added your Dell API Credentials. Please head over to ' + gs.getProperty('x_500374_dell_warr.settings_page_url') +' to input your Key.');
            app_utils.create_log('It looks like you have not yet added your Dell API Credentials. Please head over to Dell Warranty Import Settings to input your Credentials.', 'Error');
            return;
        }

        //////////////////////////////////////////// Main Life Cycle //////////////////////////////////////////
        while (asset_gr.next()) { // Loop through every hardware asset individually

            serial_num = asset_gr.serial_number;
            asset_sys_id = asset_gr.getUniqueValue();

            raw_json = new API_Utils().get_contract_json(serial_num); // Get asset's contract and store in raw_json variable
						
            if (raw_json.status_code == 200) { // Successfully retrieved JSON
                scrubbed_json = contract_processing_utils.scrub_contract_json(raw_json.contract_json); // parsing raw_json.contract_json here because it didnt like it when parsing within the GET request
                created_contract = contract_processing_utils.create_contract(scrubbed_json, asset_sys_id);
                contract_processing_utils.assign_contract_to_asset(created_contract, asset_sys_id);

                successes++;
            } else {
                app_utils.create_log('Could not retrieve contract(s) for asset with serial number: ' + serial_num + ' from Dell', 'Error');
                gs.addErrorMessage('Could not retrieve contract(s) for asset with serial number: ' + serial_num + ' from Dell');

                errors++;
            }
        }

        app_utils.create_log('Succeeded in retrieving ' + successes + ' contracts. Errors occured when trying to retrieve ' + errors + ' contracts');

    },

    type: 'Contract_Utils'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-02-02 06:45:01</sys_created_on>
        <sys_id>1437ea4e07c620103af7f2ae7c1ed03c</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Contract_Utils</sys_name>
        <sys_package display_value="Dell Warranty Import" source="x_500374_dell_warr">1fd99ec207c620103af7f2ae7c1ed0bb</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Dell Warranty Import">1fd99ec207c620103af7f2ae7c1ed0bb</sys_scope>
        <sys_update_name>sys_script_include_1437ea4e07c620103af7f2ae7c1ed03c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-02-02 06:45:01</sys_updated_on>
    </sys_script_include>
</record_update>
